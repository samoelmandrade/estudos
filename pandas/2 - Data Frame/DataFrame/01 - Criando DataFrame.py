import pandas as opcoesPandas
import numpy as opcoesNumpy

#criamos uma lista
#periods  = quantos dias
dataFrame_datas = opcoesPandas.date_range("20221201",periods=31)
print (dataFrame_datas)
'''
DatetimeIndex(['2022-12-01', '2022-12-02', '2022-12-03', '2022-12-04',
               '2022-12-05', '2022-12-06', '2022-12-07', '2022-12-08',
               '2022-12-09', '2022-12-10', '2022-12-11', '2022-12-12',
               '2022-12-13', '2022-12-14', '2022-12-15', '2022-12-16',
               '2022-12-17', '2022-12-18', '2022-12-19', '2022-12-20',
               '2022-12-21', '2022-12-22', '2022-12-23', '2022-12-24',
               '2022-12-25', '2022-12-26', '2022-12-27', '2022-12-28',
               '2022-12-29', '2022-12-30', '2022-12-31'],
              dtype='datetime64[ns]', freq='D')
'''
print('\n-------DataFrame 12 meses com a freq M')
dataFrame_Meses = opcoesPandas.date_range("20221231",periods=12, freq="M")
print(dataFrame_Meses)
'''
DatetimeIndex(['2022-12-31', '2023-01-31', '2023-02-28', '2023-03-31',
               '2023-04-30', '2023-05-31', '2023-06-30', '2023-07-31',
               '2023-08-31', '2023-09-30', '2023-10-31', '2023-11-30'],
              dtype='datetime64[ns]', freq='M')
'''
print('\n----------------------numeros aleatorios ')
numeros_aleatorios = opcoesPandas.DataFrame(opcoesNumpy.random.rand(5,1))
print(numeros_aleatorios)

'''
        0
0  0.315531
1  0.006301
2  0.180369
3  0.436015
4  0.559107
'''
print('\n----------------------numeros aleatorios 15 linhas e 10 colunas ')
numeros_aleatorios = opcoesPandas.DataFrame(opcoesNumpy.random.rand(15,10)*100)
print(numeros_aleatorios)

'''
    0          1          2          3          4          5          6          7          8          9
0   69.154817  27.693638  16.455123  37.173992  31.289404  26.624139  21.192960   7.265142   5.753985  95.443147
1   73.164073  78.506434  81.309618  84.875315  85.627170  48.647124  68.315274  76.088303   7.872645  64.554143
2   82.980715  20.849466  45.625483  64.460452  11.791108  89.975744  86.329325  84.694382  29.801091  81.971577
3    2.753332   6.326426   1.766908  80.019278  99.245133  74.367876  89.920241  85.282589  89.442737  86.321376
4   61.120907  49.891083  76.394829  31.290072  39.176766   1.241486  90.215033  34.927493  59.807802  43.980673
5   99.318895  89.512653  79.501705   1.568959  77.254193  96.537353   5.965856  20.363997  67.846122  34.118531
6   32.155661  81.193714  78.913971  96.527253  43.884210  86.557296   1.045333   8.827096  73.008245  73.762632
7   33.275464   9.313064  59.467742  33.628311  69.313480  84.420384  23.609077  33.311292  65.621452  92.296934
8   47.956929  14.854680  20.338934  10.793206   6.348221  52.251542  81.771538  78.956396  68.647675   3.305213
9   35.224815  83.028905  38.229085   1.160030  14.922170  60.897239  53.812213   9.894839  56.681405   6.728805
10  83.018500  56.298483  48.599814   0.985956  33.783683  50.739520  16.330408   9.991950  25.996491  93.930698
11  58.706841   1.566783  31.678811  45.774960  11.554079  75.144401  20.850345  50.456622  75.613081  55.572147
12   5.091556  75.507451  11.215230  56.789784  28.007878  35.587700  91.908859  59.383781   1.400493  35.260584
13   4.519481  55.985505   6.735253  16.941904  15.206180  46.097786  47.639394  67.405966  32.331401   6.326714
14  88.625054  18.282620  78.280180  78.562032  49.402915  91.211505  33.038807  17.617259  42.055639  64.863750
'''